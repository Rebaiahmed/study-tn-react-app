{"version":3,"sources":["components/Layout/Navbar.jsx","components/Layout/Footer.jsx","components/TodoItem.jsx","components/TodoAdd.jsx","components/Todos.jsx","components/Pages/Home.jsx","components/Pages/About.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","Fragment","className","href","to","Footer","TodoItem","props","completed","key","index","class","for","title","type","id","value","onChange","e","markComplete","onClick","event","deleteTodo","aria-label","aria-hidden","TodoAdd","setState","target","submit","preventDefault","todo","state","addTodo","alert","onSubmit","this","name","placeholder","Component","Todos","axios","delete","then","res","console","log","todos","filter","catch","err","newTodo","post","data","map","msg","getTodos","get","todosDone","item","todoTodo","React","Home","About","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.40b24e20.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Navbar() {\r\n    return <React.Fragment>\r\n\r\n        <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\r\n            <a className=\"navbar-brand\" href=\"#\">Study-tn React App</a>\r\n            <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item active\">\r\n                    <Link className=\"nav-link\" to=\"/\">Home</Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n                </li>\r\n\r\n            </ul>\r\n        </nav>\r\n    </React.Fragment>;\r\n}\r\n\r\nexport default Navbar;  ","import React from 'react';\r\nfunction Footer() {\r\n    return <React.Fragment>\r\n        <footer className=\"footer\">\r\n            <div className=\"container\">\r\n                <span className=\"text-muted\">My First React app 2020.</span>\r\n            </div>\r\n        </footer>\r\n    </React.Fragment>;\r\n}\r\n\r\nexport default Footer;  ","import React from 'react';\r\n\r\nfunction TodoItem(props) {\r\n\r\n    if(props.completed)\r\n    {\r\n  return (\r\n      <div>\r\n      <li className=\"list-group-item\" key={props.index}>\r\n      <label class=\"form-check-label\" for=\"exampleCheck1\">{props.title}</label>\r\n      </li>\r\n      </div>\r\n  )\r\n    }else{\r\n        return (\r\n            <div>\r\n    \r\n                <li className=\"list-group-item\" key={props.index}>\r\n                    <div class=\"form-check\">\r\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" value={props.completed}\r\n                        onChange={(e)=>props.markComplete(props.id)} />\r\n                        <label class=\"form-check-label\" for=\"exampleCheck1\">{props.title}</label>\r\n                        <button type=\"button\"  onClick={(event) => props.deleteTodo(props.id, event)} className=\"close\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                       \r\n                    </div>\r\n    \r\n                </li>\r\n    \r\n            </div>)\r\n    }\r\n    \r\n}\r\n\r\nexport default TodoItem;","import React, { Component } from 'react';\r\n\r\nclass TodoAdd extends Component {\r\n\r\n  constructor(props)\r\n  {\r\n      super(props)\r\n      this.state={\r\n        todo :'',\r\n      }\r\n\r\n  }\r\n\r\n\r\n  onChange = (e)=>{\r\n      this.setState({'todo':e.target.value})\r\n  }\r\n\r\n\r\n  submit = (event)=>{\r\n    event.preventDefault();\r\n       let {todo} = this.state;\r\n      if(!todo)\r\n      {\r\n        alert(\"Cannot be empty\") \r\n      }else{\r\n           \r\n        this.props.addTodo({\"title\":todo,\"completed\": false});\r\n        this.setState({todo:''})\r\n      } \r\n\r\n   \r\n\r\n  }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <form onSubmit={this.submit} className=\"form-inline\">\r\n             <div className=\"form-group mb-2\">\r\n            <input type=\"text\" name=\"todo\" placeholder=\"Add Todo ..\" class=\"form-control\" value={this.state.todo} onChange={this.onChange} />\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-primary mb-2\">+</button>\r\n            </form>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TodoAdd;","import React from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport TodoAdd from './TodoAdd';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Todos extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      msg: '',\r\n      todos: [\r\n\r\n      ]\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n\r\n    this.getTodos()\r\n  }\r\n\r\n\r\n  getTodos() {\r\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\r\n      .then(res => {\r\n        this.setState({ todos: res.data })\r\n      }).catch(err => {\r\n        console.log('err' + err);\r\n      })\r\n  }\r\n\r\n  deleteTodo = (id, event) => {\r\n\r\n    axios.delete('https://jsonplaceholder.typicode.com/todos/${id}')\r\n      .then(res => {\r\n        console.log('res' + res);\r\n        this.setState({ todos: [...this.state.todos.filter(todo => todo.id != id)] })\r\n\r\n      }).catch(err => {\r\n        console.log('err' + err);\r\n      })\r\n\r\n  }\r\n\r\n\r\n  addTodo = (newTodo) => {\r\n\r\n    axios.post('https://jsonplaceholder.typicode.com/todos', newTodo)\r\n      .then(res => {\r\n        this.setState({ todos: [...this.state.todos, res.data] })\r\n      }).catch(err => {\r\n        console.log('err' + err);\r\n      })\r\n\r\n\r\n  }\r\n\r\n  markComplete = (id) => {\r\n\r\n    this.setState({\r\n      todos: this.state.todos.map(todo => {\r\n        if (todo.id === id) {\r\n          todo.completed = !todo.completed\r\n        }\r\n        return todo;\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let { todos, msg } = this.state;\r\n    let todosDone = todos.filter(item => item.completed == true)\r\n    let todoTodo = todos.filter(item => item.completed == false)\r\n    return (\r\n      <React.Fragment>\r\n        <h3>{msg}</h3>\r\n        <TodoAdd addTodo={this.addTodo} />\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n            <ul className=\"list-group\">\r\n              {todoTodo.map((value, index) => {\r\n                return <TodoItem markComplete={this.markComplete} deleteTodo={this.deleteTodo} id={value.id} title={value.title} completed={value.completed} index={index} />\r\n              })}\r\n            </ul>\r\n          </div>\r\n\r\n          <div className=\"col-lg-6\">\r\n            <ul className=\"list-group\">\r\n              {todosDone.map((value, index) => {\r\n                return <TodoItem id={value.id} title={value.title} completed={value.completed} index={index} />\r\n              })}\r\n            </ul>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Todos;","import React, { Component } from 'react';\r\nimport Todos from '../Todos';\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"container\">\r\n\r\n                <Todos />\r\n            </div>\r\n\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass About extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                 <h3>About Page</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Layout/Navbar';\r\nimport Footer from './components/Layout/Footer';\r\n\r\nimport Home from './components/Pages/Home';\r\nimport About from './components/Pages/About';\r\n\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Navbar />\r\n        <Switch>\r\n\r\n          <Route path=\"/About\">\r\n            <About />\r\n          </Route>\r\n\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n\r\n        </Switch>\r\n\r\n        <Footer />\r\n\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}